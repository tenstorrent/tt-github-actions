name: 'Get Job ID'
description: 'Fetches the job ID from GitHub API using the current job name, workflow ID and attempt ID'

inputs:
  job_name:
    description: 'Job name'
    default: '[1,2]'
  gh_token:
    description: 'GitHub token'
    required: false
    default: ${{ github.token }}

outputs:
  job_id:
    description: 'The ID of the job'
    value: ${{ steps.fetch-job-id.outputs.job_id }}

runs:
  using: 'composite'
  steps:

  - name: Fetch Job ID
    id: fetch-job-id
    shell: bash
    run: |
      JOB_NAME="${{ inputs.job_name }}"
      workflow_id="${{ github.run_id }}"
      repo="${{ github.repository }}"

      page=1
      per_page=90
      job_id=""

      while true; do
          response=$(curl -s -H "Authorization: token ${{ inputs.gh_token }}" \
              "https://api.github.com/repos/$repo/actions/runs/$workflow_id/jobs?per_page=$per_page&page=$page")

          job_id=$(echo "$response" | jq -r --arg JOB_NAME "$JOB_NAME" '.jobs[] | select(.name | contains($JOB_NAME)) | .id')

          if [ -n "$job_id" ]; then
              echo "Job ID for job name '$JOB_NAME' is: $job_id"
              break
          fi

          # Check if we have more pages to fetch
          next_page=$(echo "$response" | jq -r '.total_count')
          if [ "$((page * per_page))" -ge "$next_page" ]; then
              break
          fi

          page=$((page + 1))
      done

      if [ -z "$job_id" ]; then
          echo "Job name '$JOB_NAME' not found in workflow ID $workflow_id."
          exit 1
      fi

      echo "job_id=$job_id" >> $GITHUB_OUTPUT
