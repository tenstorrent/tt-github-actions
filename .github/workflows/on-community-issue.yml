name: "Community Issue / PR Labeling Workflow"

on:
  # This is specifically needed as we are called externally
  workflow_call:

  #
  # These are what we are expecting in the calling repo / workflow, these
  # should not be activated here
  #

  issues:
    types: [opened]
  pull_request:
    types: [opened]


jobs:
  gh-workflow:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Set username and number based on event type
        id: set-variables
        run: |
          if [ "${{ github.event_name }}" = "issues" ]; then
            echo "USERNAME=${{ github.event.issue.user.login }}" >> $GITHUB_ENV
            echo "NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
            echo "GH_COMMAND=issue" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "USERNAME=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
            echo "NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
            echo "GH_COMMAND=pr" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "push" ]; then
            echo "USERNAME=${{ github.actor }}" >> $GITHUB_ENV
          fi
      - name: Check if organization member
        id: is_organization_member
        env:
          GITHUB_ORG: tenstorrent
          PAT_TOKEN: ${{ secrets.TT_BOT_ORG_MEMBERS_READ_TOKEN }}
        run: |
          http_status=$(curl -o /dev/null -L -s -w '%{http_code}' -H "Authorization: Bearer ${{ env.PAT_TOKEN }}" https://api.github.com/orgs/${{ env.GITHUB_ORG }}/members/${{ env.USERNAME }})
          if [ "$http_status" -eq 204 ]; then
            echo "Detected org member"
            echo "is_member=true" >> $GITHUB_OUTPUT
          else
            echo "Debug: HTTP Status: ${http_status}"
            echo ""
            echo "Detected community member"
            echo "is_member=false" >> $GITHUB_OUTPUT
          fi
      #- name: Add community label
      #  if: ${{ steps.is_organization_member.outputs.is_member == 'false' && env.GH_COMMAND && env.NUMBER }}
      #  run: |
      #    gh ${{env.GH_COMMAND}} edit ${{ env.NUMBER }} --add-label ${{ env.LABELS }}
      #  env:
      #    GH_TOKEN: ${{ github.token }}
      #    GH_REPO: ${{ github.repository }}
      #    LABELS: community
      - name: Dump GitHub context and environment
        run: |
          echo "==== community issue workflow debugging ===="
          echo "==== GITHUB CONTEXT (selected fields) ===="
          echo "repository: ${{ github.repository }}"
          echo "event_name: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" = "issues" ]; then
            echo "USERNAME=${{ github.event.issue.user.login }}" 
            echo "NUMBER=${{ github.event.issue.number }}" 
            echo "GH_COMMAND=issue" 
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "USERNAME=${{ github.event.pull_request.user.login }}" 
            echo "NUMBER=${{ github.event.pull_request.number }}" 
            echo "GH_COMMAND=pr" 
          elif [ "${{ github.event_name }}" = "push" ]; then
            echo "USERNAME=${{ github.actor }}" 
          fi
          echo "actor: ${{ github.actor }}"
          echo "is-member: ${{ steps.is_organization_member.outputs.is_member }}"